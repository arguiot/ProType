class ProType{get Group(){return class{changeHandler(){}constructor(a,b,c){this.group=a,this.groupName=b,this.viewName=c}setState(a){this.state=a,this.changeHandler({object:this.state})}}}get ViewController(){return class{constructor(a,b,c){this.view=a,this.views=c,this.viewsName=b;const d=this.views.indexOf(this.view);this.viewName=this.viewsName[d]}mountGroup(a,b){const c=b(a,a.getAttribute("protype-group"),this.viewName);return c}willDisappear(){}willShow(a="Main"){}}}autoMount(){const a=[...arguments],b=document.querySelectorAll("[protype]");if(this.views.push(...b),b.length!=a.length)throw"Controllers and Elements don't match";for(var c=0;c<b.length;c++)this.viewsName.push(b[c].getAttribute("protype"));for(var c=0;c<a.length;c++)this.controllers.push(new a[c](b[c],this.viewsName,this.views))}constructor(){this.version="v0.0.3",this.views=[],this.viewsName=[],this.controllers=[]}mount(){const a=[...arguments];for(var b=0;b<a.length;b++)this.views.push(a[b][1]),this.viewsName.push(a[b][0]);for(var b=0;b<a.length;b++)this.controllers.push(new a[b](this.views[b],this.viewsName,this.views))}performTransition(a,b,c="none",d="1s"){const e=this.viewsName.indexOf(a),f=this.views[e],g=this.controllers[e],h=this.viewsName.indexOf(b),i=this.views[h],j=this.controllers[h];i.setAttribute("style",""),i.style["z-index"]="-10",i.style.display="block",j.willShow(),f.style.animation=`${c} ${d} forwards`,f.addEventListener("animationend",()=>{i.style["z-index"]="0",f.style.display="none",g.willDisappear()})}set(a){document.addEventListener("DOMContentLoaded",()=>{for(var b=0;b<this.views.length;b++)this.viewsName[b]==a?(this.views[b].style.display="block",this.controllers[b].willShow()):this.views[b].style.display="none"})}}"function"==typeof define&&define.amd?define(()=>new ProType):"undefined"==typeof exports?"undefined"!=typeof global&&(global.ProType=new ProType):("undefined"!=typeof module&&module.exports&&(exports=module.exports=new ProType),exports.ProType=new ProType);