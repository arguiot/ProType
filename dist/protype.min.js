"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ProType = function () {
  _createClass(ProType, [{
    key: "autoMount",
    value: function autoMount() {
      var _views;

      var a = [].concat(Array.prototype.slice.call(arguments)),
          b = document.querySelectorAll("[protype]");if ((_views = this.views).push.apply(_views, _toConsumableArray(b)), b.length != a.length) throw "Controllers and Elements don't match";for (var _a = 0; _a < b.length; _a++) {
        this.viewsName.push(b[_a].getAttribute("protype"));
      }for (var c = 0; c < a.length; c++) {
        this.controllers.push(new a[c](b[c], this.viewsName, this.views));
      }
    }
  }, {
    key: "Group",
    get: function get() {
      return function () {
        _createClass(_class, [{
          key: "changeHandler",
          value: function changeHandler() {}
        }]);

        function _class(a, b, c) {
          _classCallCheck(this, _class);

          this.group = a, this.groupName = b, this.viewName = c, this.init();
        }

        _createClass(_class, [{
          key: "init",
          value: function init() {}
        }, {
          key: "setState",
          value: function setState(a, b) {
            JSON.stringify(a) != JSON.stringify(this.state) && (this.state = a, b({ object: this.state }));
          }
        }]);

        return _class;
      }();
    }
  }, {
    key: "ViewController",
    get: function get() {
      return function () {
        function _class2(a, b, c) {
          _classCallCheck(this, _class2);

          this.view = a, this.views = c, this.viewsName = b;var d = this.views.indexOf(this.view);this.viewName = this.viewsName[d];
        }

        _createClass(_class2, [{
          key: "mountGroup",
          value: function mountGroup(a, b) {
            var c = new b(a, a.getAttribute("protype-group"), this.viewName);return c;
          }
        }, {
          key: "willDisappear",
          value: function willDisappear() {}
        }, {
          key: "willShow",
          value: function willShow() {
            var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "Main";
          }
        }]);

        return _class2;
      }();
    }
  }]);

  function ProType() {
    _classCallCheck(this, ProType);

    this.version = "v0.0.6", this.views = [], this.viewsName = [], this.controllers = [];
  }

  _createClass(ProType, [{
    key: "mount",
    value: function mount() {
      var a = [].concat(Array.prototype.slice.call(arguments));for (var b = 0; b < a.length; b++) {
        this.views.push(a[b][1]), this.viewsName.push(a[b][0]);
      }for (var _b = 0; _b < a.length; _b++) {
        this.controllers.push(new a[_b](this.views[_b], this.viewsName, this.views));
      }
    }
  }, {
    key: "performTransition",
    value: function performTransition(a, b) {
      var c = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "none";
      var d = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "1s";
      var e = this.viewsName.indexOf(a),
          f = this.views[e],
          g = this.controllers[e],
          h = this.viewsName.indexOf(b),
          i = this.views[h],
          j = this.controllers[h];i.setAttribute("style", ""), i.style["z-index"] = "-10", i.style.display = "block", j.willShow(), f.style.animation = c + " " + d + " forwards", f.addEventListener("animationend", function () {
        i.style["z-index"] = "0", f.style.display = "none", g.willDisappear();
      });
    }
  }, {
    key: "set",
    value: function set(a) {
      var _this = this;

      document.addEventListener("DOMContentLoaded", function () {
        for (var b = 0; b < _this.views.length; b++) {
          _this.viewsName[b] == a ? (_this.views[b].style.visibility = "visible", _this.controllers[b].willShow()) : _this.views[b].style.visibility = "hidden";
        }
      });
    }
  }]);

  return ProType;
}();

"function" == typeof define && define.amd ? define(function () {
  return new ProType();
}) : "undefined" == typeof exports ? "undefined" != typeof global && (global.ProType = new ProType()) : ("undefined" != typeof module && module.exports && (exports = module.exports = new ProType()), exports.ProType = new ProType());